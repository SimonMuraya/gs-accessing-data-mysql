package hello.controller;

import hello.SubscribersRepository;
import hello.model.Subscribers;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
//import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/subscribers") // This means URL's start with /demo (after Application path)
public class SubscribersController {
    @Autowired // This means to get the bean called subscribersRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private SubscribersRepository subscribersRepository;

    private String hello = "Nope";

//    @GetMapping(path="/add") // Map ONLY GET Requests
//    public @ResponseBody String addNewSubscribers (@RequestParam String water_point_id
//            , @RequestParam String session_chat_id
//            , @RequestParam String telegram_chat_id
//            , @RequestParam String province
//            , @RequestParam String district
//            , @RequestParam String chiefdom) {
//        // @ResponseBody means the returned String is the response, not a view name
//        // @RequestParam means it is a parameter from the GET or POST request
//
//        Subscribers n = new Subscribers();
//        n.setName(username);
//        n.setEmail(email);
//        subscribersRepository.save(n);
//        return "Saved";
//    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Subscribers> getAllSubscribers() {
        // This returns a JSON or XML with the users
        return subscribersRepository.findAll();
    }

    @GetMapping(path="/vim") // Testing Functions
    public @ResponseBody String vim () {
        return hello;
    }
}
